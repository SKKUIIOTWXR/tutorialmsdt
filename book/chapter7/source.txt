############################## 1
1. Open Azure Digital Twins Explorer.
2. In the model view of Azure Digital Twins Explorer, delete the models in the following order: Meetingroom, Workarea, Room, Sensor, Floor. The Meetingroom and Workarea models must be removed first before the Room model is removed since they are both derived from Room.
3. Add the models in the following order via the model view of Azure Digital Twins Explorer: Floor, Sensor, Room, Workarea, Meetingroom. Use the corresponding JSON files from the chapter7 folder to do this.

############################## 2
1. Click on the Import Graph button.
2. Select the Excel SmartBuilding.xlsx file.
3. Click the Open button to open the demo graph:

############################## 3
1. Click the Run Query button to refresh the graph view.
2. View the imported demo graph.
3. Remove the structure of the previous chapters. Select each relationship one by one and click the Delete Relationship button. The digital twins can be removed all at once by multi-selecting them using the Shift button. Click the Delete Selected Twins button to remove them all at once. The following screenshot shows the results:

############################## 4
SELECT * FROM DIGITALTWINS DT WHERE DT.lightson = TRUE   --- SQL Reference 
SELECT * FROM DIGITALTWINS DT WHERE DT.temperaturevalue>20.0 AND DT.temperaturevalue<21.0
SELECT * FROM DIGITALTWINS DT WHERE DT.$dtId IN ['centralbuilding','thirdfloor','meetingroom301','meetingroom302']
SELECT * FROM DIGITALTWINS WHERE IS_DEFINED(occupied)
SELECT * FROM DIGITALTWINS DT WHERE IS_NUMBER(DT.temperaturevalue)
SELECT TOP(9) FROM digitaltwins
SELECT COUNT() FROM DIGITALTWINS

############################## 5
SELECT * FROM DIGITALTWINS WHERE IS_OF_MODEL('dtmi:com:smartbuilding:Room;1')
SELECT * FROM DIGITALTWINS WHERE IS_OF_MODEL('dtmi:com:smartbuilding:Room;1', exact)

############################## 6
SELECT DT,RT FROM DIGITALTWINS DT JOIN RT RELATED DT.contains WHERE DT.$dtId = 'secondfloor'
SELECT BU,FL FROM DIGITALTWINS BU JOIN FL RELATED BU.has
SELECT BU,FL FROM DIGITALTWINS BU JOIN FL RELATED BU.has WHERE FL.$dtId='firstfloor'
SELECT BU,FL,RO FROM DIGITALTWINS BU JOIN FL RELATED BU.has JOIN RO RELATED FL.contains WHERE FL.$dtId='firstfloor'
SELECT BU,FL,RO FROM DIGITALTWINS BU JOIN FL RELATED BU.has JOIN RO RELATED FL.contains WHERE S_OF_MODEL(RO,'dtmi:com:smartbuilding:Meetingroom;1') AND FL.$dtId='firstfloor'

############################## 7
SELECT BU,FL FROM DIGITALTWINS BU JOIN FL RELATED BU.has WHERE BU.$dtId='centralbuilding'
SELECT BU,FL,BF FROM DIGITALTWINS BU JOIN FL RELATED BU.has BF WHERE BU.$dtId='centralbuilding'
SELECT temperaturevalue FROM DIGITALTWINS WHERE IS_OF_MODEL('dtmi:com:smartbuilding:Meetingroom;1') AND IS_PRIMITIVE(temperaturevalue)
SELECT FL.lightson,BF.level FROM DIGITALTWINS BU JOIN FL RELATED BU.has BF WHERE BU.$dtId='centralbuilding' AND IS_PRIMITIVE(FL.lightson) AND IS_PRIMITIVE(BF.level)

############################## 8
public Pageable<BasicDigitalTwin> QueryDigitalTwins(string query)
{
    Pageable<BasicDigitalTwin> result = null;
    try
    {
        result = client.Query<BasicDigitalTwin>(query);
    }
    catch (RequestFailedException)
    {
    }
    return result;
}

############################## 9
DigitalTwinsManager dtHelper = new DigitalTwinsManager();
Pageable<BasicDigitalTwin> result = dtHelper.QueryDigitalTwins("SELECT * FROM DIGITALTWINS");
foreach (BasicDigitalTwin item in result)
{
    Console.WriteLine(item.Id);
}

############################## 10
public Pageable<Dictionary<string, BasicDigitalTwin>> Query(string query)
{
    Pageable<Dictionary<string, BasicDigitalTwin>> result = null;
    try
    {
        result = client.Query<Dictionary<string, BasicDigitalTwin>>(query);
    }
    catch(RequestFailedException)
    {
    }
    return result;
}

############################## 11
DigitalTwinsManager dtHelper = new DigitalTwinsManager();
Pageable<Dictionary<string, BasicDigitalTwin>> result = dtHelper.Query("SELECT BU,FL FROM DIGITALTWINS BU JOIN FL RELATED BU.has WHERE BU.$dtId='centralbuilding'");
foreach (Dictionary<string, BasicDigitalTwin> item in result)
{
    BasicDigitalTwin BU = item["BU"] as BasicDigitalTwin;
    BasicDigitalTwin FL = item["FL"] as BasicDigitalTwin;
    Console.WriteLine(string.Format("{0}-{1}", BU.Id, FL.Id));
}
